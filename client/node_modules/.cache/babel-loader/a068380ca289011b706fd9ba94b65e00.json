{"ast":null,"code":"import _defineProperty from \"D:\\\\udemy\\\\react\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\udemy\\\\react\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\udemy\\\\react\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SignUpTitleContainer, SignUpContainer } from './sign-up.styles';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    signUpStart({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(SignUpTitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Sign up with your e-mail and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"Confirm password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"SIGN UP\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: ({\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }) => dispatch(signUpStart({\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["D:\\udemy\\react\\crwn-clothing\\client\\src\\components\\sign-up\\sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUpTitleContainer","SignUpContainer","SignUp","displayName","email","password","confirmPassword","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { connect } from 'react-redux';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport { SignUpTitleContainer, SignUpContainer } from './sign-up.styles';\r\n\r\nconst SignUp = ({signUpStart}) =>\r\n{ \r\n    const [userCredentials, setCredentials] =\r\n    useState({\r\n        displayName:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    });\r\n     \r\n    const {displayName, email, password, confirmPassword} = userCredentials;\r\n\r\n    const handleSubmit = async event => { \r\n        event.preventDefault();\r\n        signUpStart({ displayName, email, password, confirmPassword });\r\n    }\r\n\r\n    const handleChange = event => { \r\n        const { value, name} = event.target;\r\n        setCredentials({ ...userCredentials, [name]:value });\r\n    }\r\n    \r\n    return(\r\n        <SignUpContainer>\r\n            <SignUpTitleContainer>I do not have a account</SignUpTitleContainer>\r\n            <span>Sign up with your e-mail and password</span>\r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput \r\n                    name='displayName' \r\n                    type='text' \r\n                    value={displayName} \r\n                    handleChange={handleChange}\r\n                    label='Display name'\r\n                    required \r\n                />\r\n                <FormInput \r\n                    name='email' \r\n                    type='email' \r\n                    value={email} \r\n                    handleChange={handleChange}\r\n                    label='Email'\r\n                    required \r\n                />\r\n                <FormInput \r\n                    name='password' \r\n                    type='password' \r\n                    value={password} \r\n                    handleChange={handleChange}\r\n                    label='Password'\r\n                    required \r\n                />\r\n                <FormInput \r\n                    name='confirmPassword' \r\n                    type='password' \r\n                    value={confirmPassword} \r\n                    handleChange={handleChange}\r\n                    label='Confirm password'\r\n                    required \r\n                />\r\n                <div className='buttons'>\r\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                </div>\r\n                </form>\r\n        </SignUpContainer>\r\n    )\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: ({ displayName, email, password, confirmPassword }) => dispatch(signUpStart({ displayName, email, password, confirmPassword }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}