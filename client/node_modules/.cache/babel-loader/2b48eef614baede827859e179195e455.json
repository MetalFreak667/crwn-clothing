{"ast":null,"code":"import _defineProperty from \"D:\\\\udemy\\\\react\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\udemy\\\\react\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\udemy\\\\react\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { ReactComponent as GoogleLogo } from \"@svgr/webpack?-svgo,+ref!../../assets/crown.svg.svg\";\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart, facebookSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitleContainer, SignInButtonsContainer } from './sign-in.styles';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart,\n  facebookSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart({\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, value, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(SignInTitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(SignInButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"SIGN IN\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(GoogleLogo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), \"GOOGLE\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: facebookSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    align: \"middle\",\n    height: \"30PX;\",\n    src: \"'../../face.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"SIGN IN\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  facebookSignInStart: () => dispatch(facebookSignInStart()),\n  emailSignInStart: ({\n    email,\n    password\n  }) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:\\udemy\\react\\crwn-clothing\\client\\src\\components\\sign-in\\sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","facebookSignInStart","SignInContainer","SignInTitleContainer","SignInButtonsContainer","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { ReactComponent as GoogleLogo } from '../../assets/crown.svg.svg';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { connect } from 'react-redux';\r\nimport { googleSignInStart, emailSignInStart, facebookSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport { SignInContainer, SignInTitleContainer, SignInButtonsContainer} from './sign-in.styles';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart, facebookSignInStart }) =>\r\n{\r\n    const [userCredentials, setCredentials] = useState({ email: '', password: '' });\r\n    const { email, password } = userCredentials;\r\n    const handleSubmit = async event => { \r\n        event.preventDefault();        \r\n        emailSignInStart({email, password});\r\n    }\r\n\r\n    const handleChange = event => { \r\n        const { value, name} = event.target;\r\n        setCredentials({ ...value, [name]:value });\r\n    }\r\n\r\n    return (\r\n        <SignInContainer>\r\n            <SignInTitleContainer>I already have an account</SignInTitleContainer>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n            \r\n                <FormInput \r\n                    name='email' \r\n                    type='email' \r\n                    value={email} \r\n                    handleChange={handleChange}\r\n                    label='Email'\r\n                    required \r\n                />\r\n                <FormInput \r\n                    name='password' \r\n                    type='password' \r\n                    value={password} \r\n                    handleChange={handleChange}\r\n                    label='Password'\r\n                    required \r\n                />\r\n                <SignInButtonsContainer>\r\n                    <CustomButton type='submit'>SIGN IN</CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                    <GoogleLogo></GoogleLogo>\r\n                    GOOGLE</CustomButton>\r\n                    <CustomButton type='button' onClick={facebookSignInStart} isGoogleSignIn >\r\n                    <img  align=\"middle\" height=\"30PX;\" src=\"'../../face.png\"></img>\r\n                    SIGN IN\r\n                    </CustomButton>\r\n                    \r\n                </SignInButtonsContainer>\r\n            </form>\r\n        </SignInContainer>\r\n    );\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    facebookSignInStart: () => dispatch(facebookSignInStart()),\r\n    emailSignInStart: ({email, password}) => dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}