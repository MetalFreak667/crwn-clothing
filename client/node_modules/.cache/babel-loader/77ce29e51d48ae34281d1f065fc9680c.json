{"ast":null,"code":"import _defineProperty from \"D:\\\\udemy\\\\react\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  } else {\n    return [...cartItems, _objectSpread({}, cartItemToAdd, {\n      quantity: 1\n    })];\n  }\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem && cartItemToRemove.quantity > 1) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity - 1\n    }) : cartItem);\n  } else if (existingCartItem && cartItemToRemove.quantity === 1) {\n    return clearItemFromCart(cartItems, cartItemToRemove);\n  } else {\n    return [...cartItems];\n  }\n};\nexport const clearItemFromCart = (cartItems, cartItemToRemove) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n};","map":{"version":3,"sources":["D:\\udemy\\react\\crwn-clothing\\client\\src\\redux\\cart\\cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","clearItemFromCart","filter"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB;;AAIA,MAAGH,gBAAH,EAAoB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACMD,QADN;AACgBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD9C,SAEEH,QAHC,CAAP;AAKH,GAND,MAMK;AACD,WAAO,CAAC,GAAGJ,SAAJ,oBAAmBC,aAAnB;AAAkCM,MAAAA,QAAQ,EAAE;AAA5C,OAAP;AACH;AACJ,CAdM;AAgBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADxB,CAAzB;;AAIA,MAAGH,gBAAgB,IAAIO,gBAAgB,CAACF,QAAjB,GAA0B,CAAjD,EAAmD;AAC/C,WAAOP,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,qBACMD,QADN;AACgBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD9C,SAEEH,QAHC,CAAP;AAKH,GAND,MAMM,IAAGF,gBAAgB,IAAIO,gBAAgB,CAACF,QAAjB,KAA8B,CAArD,EAAwD;AAC1D,WAAOG,iBAAiB,CAACV,SAAD,EAAYS,gBAAZ,CAAxB;AACH,GAFK,MAED;AACD,WAAO,CAAC,GAAGT,SAAJ,CAAP;AACH;AACJ,CAhBM;AAkBP,OAAO,MAAMU,iBAAiB,GAAG,CAACV,SAAD,EAAYS,gBAAZ,KAAiC;AAC9D,SAAOT,SAAS,CAACW,MAAV,CAAiBP,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACH,CAFM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToAdd.id\r\n        );\r\n\r\n    if(existingCartItem){\r\n        return cartItems.map(cartItem => \r\n            cartItem.id === cartItemToAdd.id\r\n            ? {...cartItem, quantity: cartItem.quantity + 1}\r\n            : cartItem\r\n            )\r\n    }else{\r\n        return [...cartItems, {...cartItemToAdd, quantity: 1}];\r\n    }\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToRemove.id\r\n        );\r\n\r\n    if(existingCartItem && cartItemToRemove.quantity>1){\r\n        return cartItems.map(cartItem => \r\n            cartItem.id === cartItemToRemove.id\r\n            ? {...cartItem, quantity: cartItem.quantity - 1} \r\n            : cartItem\r\n            )\r\n    }else if(existingCartItem && cartItemToRemove.quantity === 1) {\r\n        return clearItemFromCart(cartItems, cartItemToRemove);\r\n    }else{\r\n        return [...cartItems];\r\n    }\r\n};\r\n\r\nexport const clearItemFromCart = (cartItems, cartItemToRemove) => {\r\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n};"]},"metadata":{},"sourceType":"module"}