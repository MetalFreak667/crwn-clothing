{"ast":null,"code":"var _jsxFileName = \"D:\\\\udemy\\\\react\\\\crwn-clothing\\\\client\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport Spinner from '../../components/spinner/spinner.component';\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/collections-overview.container'));\nconst CollectionPageContainer = lazy(() => import('../collection/collection.container'));\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  throw Error;\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \":collectionId\"),\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:\\udemy\\react\\crwn-clothing\\client\\src\\pages\\shop\\shop.component.jsx"],"names":["React","useEffect","lazy","Suspense","Route","connect","fetchCollectionsStart","Spinner","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","Error","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,OAAOC,OAAP,MAAoB,4CAApB;AAEA,MAAMC,4BAA4B,GAAGN,IAAI,CAAC,MAAM,OAAO,sEAAP,CAAP,CAAzC;AACA,MAAMO,uBAAuB,GAAGP,IAAI,CAAC,MAAI,OAAO,oCAAP,CAAL,CAApC;;AAEA,MAAMQ,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQL,EAAAA;AAAR,CAAD,KAAoC;AAEjDL,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,qBAAqB;AACxB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAGJ,QAAMM,KAAN;AACI,SAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFR;AAGI,IAAA,SAAS,EAAEL,4BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,KAAD;AACI,IAAA,IAAI,YAAKG,KAAK,CAACE,IAAX,kBADR;AAEI,IAAA,SAAS,EAAEJ,uBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CAHJ;AAkBH,CAxBD;;AA0BA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,qBAAqB,EAAE,MAAMS,QAAQ,CAACT,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCJ,QAAlC,CAAf","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\nimport Spinner from '../../components/spinner/spinner.component';\r\n\r\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/collections-overview.container'));\r\nconst CollectionPageContainer = lazy(()=>import('../collection/collection.container'));\r\n\r\nconst ShopPage = ({match, fetchCollectionsStart}) => {   \r\n\r\n    useEffect(()=>{\r\n        fetchCollectionsStart();\r\n    }, [fetchCollectionsStart])\r\nthrow Error;\r\n    return (      \r\n        \r\n              \r\n        <div className='shop-page'>\r\n            <Suspense fallback={<Spinner></Spinner>}>\r\n                <Route \r\n                    exact \r\n                    path={`${match.path}`} \r\n                    component={CollectionsOverviewContainer}>                \r\n                </Route> \r\n                <Route \r\n                    path={`${match.path}:collectionId`}                 \r\n                    component={CollectionPageContainer}>\r\n                </Route>\r\n            </Suspense>\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}