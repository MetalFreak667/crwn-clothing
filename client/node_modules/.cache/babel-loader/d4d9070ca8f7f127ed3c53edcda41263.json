{"ast":null,"code":"import _defineProperty from \"D:\\\\udemy\\\\react\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, facebookProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    console.log(userAuth);\n    console.log(additionalData);\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithFacebook);\n}\nexport function* signInWithFacebook() {\n  console.log('signInWithFacebook');\n\n  try {\n    const _ref2 = yield auth.signInWithPopup(facebookProvider),\n          user = _ref2.user;\n\n    console.log(user);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    console.log(error);\n    yield put(signInFailure(error));\n  }\n}\nexport function* onFacebookSignInStart() {\n  console.log('onFacebookSignInStart');\n  yield takeLatest(UserActionTypes.FACEBOOK_SIGN_IN_START, signInWithFacebook);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }\n}) {\n  if (password !== confirmPassword) {\n    yield put(signUpFailure('passwords dont match'));\n  }\n\n  try {\n    const _ref4 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref4.user;\n\n    const min = 4;\n    const max = 5;\n    const random = Math.floor(Math.random() * (+max - +min)) + +min;\n    const photoURL = \"https://robohash.org/\".concat(user.uid, \"?set=set\").concat(random);\n    console.log(photoURL);\n    yield getSnapshotFromUserAuth(user, {\n      displayName,\n      photoURL\n    });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    console.log(userAuth);\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUp() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onFacebookSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUp)]);\n}","map":{"version":3,"sources":["D:\\udemy\\react\\crwn-clothing\\client\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","facebookProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","UserActionTypes","getSnapshotFromUserAuth","userAuth","additionalData","console","log","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithFacebook","onFacebookSignInStart","FACEBOOK_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUp","displayName","confirmPassword","createUserWithEmailAndPassword","min","max","random","Math","floor","photoURL","uid","isUserAuthenticated","signOut","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUp","SIGN_UP_START","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,gBAA/B,EAAiDC,yBAAjD,EAA4EC,cAA5E,QAAkG,+BAAlG;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,EAAuDC,cAAvD,EAAuEC,aAAvE,QAA4F,gBAA5F;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,cAA5C,EAA2D;AAC9D,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,UAAMG,OAAO,GAAG,MAAMjB,IAAI,CAACI,yBAAD,EAA4BS,QAA5B,EAAsCC,cAAtC,CAA1B;AACA,UAAMI,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMrB,GAAG,CAACQ,aAAa;AAAGc,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AACH,GAPD,CAOE,OAAOC,KAAP,EACF;AACI,UAAMxB,GAAG,CAACS,aAAa,CAACe,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAI;AAAA,iBACiB,MAAMtB,IAAI,CAACuB,eAAL,CAAqBtB,cAArB,CADvB;AAAA,UACQuB,IADR,QACQA,IADR;;AAEA,UAAMb,uBAAuB,CAACa,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOH,KAAP,EACF;AACI,UAAMxB,GAAG,CAACS,aAAa,CAACe,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,mBAAV,GACP;AACI,QAAM7B,UAAU,CAACc,eAAe,CAACgB,oBAAjB,EAAuCC,kBAAvC,CAAhB;AACH;AAED,OAAO,UAAUA,kBAAV,GAA8B;AACjCb,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,MAAI;AAAA,kBACiB,MAAMf,IAAI,CAACuB,eAAL,CAAqBrB,gBAArB,CADvB;AAAA,UACQsB,IADR,SACQA,IADR;;AAEAV,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACA,UAAMb,uBAAuB,CAACa,IAAD,CAA7B;AACH,GAJD,CAIE,OAAOH,KAAP,EACF;AACIP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,UAAMxB,GAAG,CAACS,aAAa,CAACe,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUO,qBAAV,GACP;AACId,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAMnB,UAAU,CAACc,eAAe,CAACmB,sBAAjB,EAAyCF,kBAAzC,CAAhB;AACH;AAGD,OAAO,UAAUG,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EACP;AACI,MAAI;AAAA,kBACiB,MAAMjC,IAAI,CAACkC,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADvB;AAAA,UACQT,IADR,SACQA,IADR;;AAEA,UAAMb,uBAAuB,CAACa,IAAD,CAA7B;AACH,GAHD,CAIA,OAAMH,KAAN,EACA;AACI,UAAMxB,GAAG,CAACS,aAAa,CAACe,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUc,MAAV,CAAiB;AAAEJ,EAAAA,OAAO,EAAE;AAAEK,IAAAA,WAAF;AAAeJ,IAAAA,KAAf;AAAsBC,IAAAA,QAAtB;AAAgCI,IAAAA;AAAhC;AAAX,CAAjB,EACP;AACI,MAAGJ,QAAQ,KAAKI,eAAhB,EACA;AACI,UAAMxC,GAAG,CAACY,aAAa,CAAC,sBAAD,CAAd,CAAT;AACH;;AAED,MAAI;AAAA,kBACiB,MAAMT,IAAI,CAACsC,8BAAL,CAAoCN,KAApC,EAA2CC,QAA3C,CADvB;AAAA,UACQT,IADR,SACQA,IADR;;AAEA,UAAMe,GAAG,GAAC,CAAV;AACA,UAAMC,GAAG,GAAC,CAAV;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,MAAiB,CAACD,GAAD,GAAO,CAACD,GAAzB,CAAX,IAA4C,CAACA,GAA5D;AACA,UAAMK,QAAQ,kCAA2BpB,IAAI,CAACqB,GAAhC,qBAA8CJ,MAA9C,CAAd;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAY6B,QAAZ;AAEA,UAAMjC,uBAAuB,CAACa,IAAD,EAAO;AAACY,MAAAA,WAAD;AAAcQ,MAAAA;AAAd,KAAP,CAA7B;AAEH,GAVD,CAWA,OAAMvB,KAAN,EACA;AACI,UAAMxB,GAAG,CAACY,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUyB,mBAAV,GAA+B;AAClC,MAAG;AACC,UAAMlC,QAAQ,GAAG,MAAMR,cAAc,EAArC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAG,CAACA,QAAJ,EACA;AACI;AACH;;AAED,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AAEH,GAVD,CAUE,OAAMS,KAAN,EACF;AACI,UAAMxB,GAAG,CAACS,aAAa,CAACe,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAU0B,OAAV,GACP;AACI,MAAG;AACC,UAAM/C,IAAI,CAAC+C,OAAL,EAAN;AACA,UAAOlD,GAAG,CAACU,cAAc,EAAf,CAAV;AACH,GAHD,CAGE,OAAMc,KAAN,EACF;AACI,UAAMxB,GAAG,CAACW,cAAc,CAACa,KAAD,CAAf,CAAT;AACH;AAEJ;AAED,OAAO,UAAU2B,kBAAV,GACP;AACI,QAAMpD,UAAU,CAACc,eAAe,CAACuC,mBAAjB,EAAsCnB,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUoB,kBAAV,GAA8B;AACjC,QAAMtD,UAAU,CAACc,eAAe,CAACyC,kBAAjB,EAAqCL,mBAArC,CAAhB;AACH;AAED,OAAO,UAAUM,cAAV,GACP;AACI,QAAMxD,UAAU,CAACc,eAAe,CAAC2C,cAAjB,EAAiCN,OAAjC,CAAhB;AACH;AAED,OAAO,UAAUO,QAAV,GACP;AACI,QAAM1D,UAAU,CAACc,eAAe,CAAC6C,aAAjB,EAAgCpB,MAAhC,CAAhB;AACH;AAED,OAAO,UAAUqB,SAAV,GAAqB;AACxB,QAAM1D,GAAG,CAAC,CACNC,IAAI,CAAC0B,mBAAD,CADE,EAEN1B,IAAI,CAAC6B,qBAAD,CAFE,EAGN7B,IAAI,CAACiD,kBAAD,CAHE,EAINjD,IAAI,CAACmD,kBAAD,CAJE,EAKNnD,IAAI,CAACqD,cAAD,CALE,EAMNrD,IAAI,CAACuD,QAAD,CANE,CAAD,CAAT;AAQH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { auth, googleProvider, facebookProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure } from './user.actions';\r\nimport UserActionTypes from './user.types';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData){\r\n    try {\r\n        console.log(userAuth);\r\n        console.log(additionalData);\r\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\r\n        const userSnapshot = yield userRef.get();\r\n\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    } catch (error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n} \r\n\r\nexport function* onGoogleSignInStart()\r\n{\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithFacebook)\r\n}\r\n\r\nexport function* signInWithFacebook(){\r\n    console.log('signInWithFacebook');\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(facebookProvider);\r\n        console.log(user);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error)\r\n    {\r\n        console.log(error);\r\n        yield put(signInFailure(error));\r\n    }\r\n} \r\n\r\nexport function* onFacebookSignInStart()\r\n{\r\n    console.log('onFacebookSignInStart');\r\n    yield takeLatest(UserActionTypes.FACEBOOK_SIGN_IN_START, signInWithFacebook)\r\n}\r\n\r\n\r\nexport function* signInWithEmail({ payload: { email, password }})\r\n{\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }\r\n    catch(error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signUp({ payload: { displayName, email, password, confirmPassword }})\r\n{\r\n    if(password !== confirmPassword)\r\n    {\r\n        yield put(signUpFailure('passwords dont match'));\r\n    }\r\n\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n        const min=4; \r\n        const max=5;  \r\n        const random = Math.floor(Math.random() * (+max - +min)) + +min; \r\n        const photoURL = `https://robohash.org/${user.uid}?set=set${random}`;\r\n        console.log(photoURL);\r\n\r\n        yield getSnapshotFromUserAuth(user, {displayName, photoURL});\r\n\r\n    }\r\n    catch(error)\r\n    {\r\n        yield put(signUpFailure(error));\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n    try{\r\n        const userAuth = yield getCurrentUser();\r\n        console.log(userAuth);\r\n        if(!userAuth)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        yield getSnapshotFromUserAuth(userAuth);\r\n        \r\n    } catch(error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut()\r\n{\r\n    try{\r\n        yield auth.signOut();\r\n        yield (put(signOutSuccess()));\r\n    } catch(error)\r\n    {\r\n        yield put(signOutFailure(error));\r\n    }\r\n\r\n}\r\n\r\nexport function* onEmailSignInStart()\r\n{\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart()\r\n{\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onSignUp()\r\n{\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onFacebookSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUp)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}